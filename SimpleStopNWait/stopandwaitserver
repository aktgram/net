#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define MAXLINE 1024 

void main(){
	char *ip="127.0.0.1";
	int port =5000;

	int server_sock;
	struct sockaddr_in server_addr,client_addr;
	socklen_t addr_size;
	char buffer[1024];
	int n;
	int frameno;

	server_sock = socket(AF_INET,SOCK_DGRAM,0);
	if (server_sock<0)
	{
		perror("[-] Socket error\n");
		exit(1);
	}

	printf("[+] UDP server socket created.\n");

	memset(&server_addr,'\0',sizeof(server_addr));
    memset(&client_addr, '\0', sizeof(client_addr)); 
	server_addr.sin_family=AF_INET;
	server_addr.sin_port=port;
	server_addr.sin_addr.s_addr=inet_addr(ip);


    int len; 
    
    len = sizeof(client_addr);

	n=bind(server_sock,(struct sockaddr*)&server_addr,sizeof(server_addr));
	if(n<0){
		perror("[-] Bind error.\n");
		exit(1);
	}

	printf("[+] Binded to the port number : %d\n",port);


	// while(1){
		char serverbuffer[100];
		bzero(buffer,1024);
		recvfrom(server_sock, (char *)buffer, MAXLINE, MSG_WAITALL, ( struct sockaddr *) &client_addr, &len);
		frameno = atoi(&buffer[0]);
		int i = frameno;
		int tempr = 0;
		printf("Number Of Frames : %s\n", buffer);
		bzero(buffer,1024);
		while(i>0){
			bzero(buffer,1024);
			bzero(serverbuffer,100);
			tempr = recvfrom(server_sock, (char *)buffer, MAXLINE, MSG_WAITALL, ( struct sockaddr *) &client_addr, &len);
			buffer[tempr] = '\0';
			if(tempr > 0){
				printf("\nClient : %s\n",buffer);
				strcpy(serverbuffer,buffer);
				bzero(buffer,1024);
				strcpy(buffer,"Acknowledgement for ");
				strcat(buffer,serverbuffer);
				printf("\nServer : %s\n",buffer );
				sendto(server_sock, buffer, strlen(buffer), MSG_CONFIRM, (const struct sockaddr *) &client_addr, sizeof(client_addr));
				i--;
			}else{
				printf("\nError Receiving Message !");
			}
		}
	// }
}
